buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {

        //for artifactory
//        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"


        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    }
}

version "0.1"
group "myplugin"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

//for artifactory
//apply plugin: "com.jfrog.artifactory"


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
    portalUser = ""
    portalPassword = ""    
}


assets {
    packagePlugin = true
}


////for artifactory publish
//String targetRepo = version.endsWith('SNAPSHOT') ? 'plugins-snapshot-local' : 'plugins-release-local'
//artifactory {
//    contextUrl = "http://www.repositoryUrl.com"
//    publish {
//        repository {
//            repoKey = targetRepo // The Artifactory repository key to publish to
//            username = "user" // The publisher user name
//            password = "password" // The publisher password
//        }
//        defaults {
//            // Reference to Gradle publications defined in the build script.
//            // This is how we tell the Artifactory Plugin which artifacts should be
//            // published to Artifactory.
//            publications('maven')
//            publishArtifacts = true
//            // Properties to be attached to the published artifacts.
//            properties = ['qa.level': 'basic', 'dev.team' : 'core']
//            // Publish generated POM files to Artifactory (true by default)
//            publishPom = true
//        }
//    }
//    resolve {
//        repoKey = 'jcenter'
//    }
//}

